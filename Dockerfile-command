FROM mcr.microsoft.com/dotnet/sdk:8.0-alpine AS build-env


WORKDIR /src

# Copy COMMAND project files
COPY COMMAND/COMMAND.API/*.csproj COMMAND/COMMAND.API/
COPY COMMAND/COMMAND.APPLICATION/*.csproj COMMAND/COMMAND.APPLICATION/
COPY COMMAND/COMMAND.APPLICATION.TEST/*.csproj COMMAND/COMMAND.APPLICATION.TEST/
COPY COMMAND/COMMAND.INFRASTRUCTURE/*.csproj COMMAND/COMMAND.INFRASTRUCTURE/
COPY COMMAND/COMMAND.PERSISTENCE/*.csproj COMMAND/COMMAND.PERSISTENCE/
COPY COMMAND/COMMAND.PRESENTATION/*.csproj COMMAND/COMMAND.PRESENTATION/
COPY COMMAND/COMMAND.CONTRACT/*.csproj COMMAND/COMMAND.CONTRACT/

# Copy the shared CONTRACT project (now accessible)
COPY CONTRACT/CONTRACT/*.csproj CONTRACT/CONTRACT/

RUN dotnet nuget locals all --clear
# Restore packages with retry logic and timeout settings
RUN dotnet restore COMMAND/COMMAND.API/COMMAND.API.csproj --verbosity normal --force

# Copy all source code
COPY . ./

# Build and publish the COMMAND API
WORKDIR /src/COMMAND/COMMAND.API
RUN dotnet publish -c Release -o /app/out

# Runtime stage with globalization support
FROM mcr.microsoft.com/dotnet/aspnet:8.0-alpine

# ✅ Add ICU globalization support
RUN apk add --no-cache icu-libs

# ✅ Enable ICU-based globalization support
ENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
WORKDIR /app
COPY --from=build-env /app/out .
ENTRYPOINT ["dotnet", "COMMAND.API.dll"]
