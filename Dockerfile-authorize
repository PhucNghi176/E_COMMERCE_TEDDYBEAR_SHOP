FROM mcr.microsoft.com/dotnet/sdk:8.0-alpine AS build-env

WORKDIR /src

# Copy project files (as you already have)
COPY AUTHORIZATION/AUTHORIZATION.API/*.csproj AUTHORIZATION/AUTHORIZATION.API/
COPY AUTHORIZATION/AUTHORIZATION.APPLICATION/*.csproj AUTHORIZATION/AUTHORIZATION.APPLICATION/
COPY AUTHORIZATION/AUTHORIZATION.INFRASTRUCTURE/*.csproj AUTHORIZATION/AUTHORIZATION.INFRASTRUCTURE/
COPY AUTHORIZATION/AUTHORIZATION.PERSISTENCE/*.csproj AUTHORIZATION/AUTHORIZATION.PERSISTENCE/
COPY AUTHORIZATION/AUTHORIZATION.PRESENTATION/*.csproj AUTHORIZATION/AUTHORIZATION.PRESENTATION/
COPY AUTHORIZATION/AUTHORIZATION.CONTRACT/*.csproj AUTHORIZATION/AUTHORIZATION.CONTRACT/
COPY CONTRACT/CONTRACT/*.csproj CONTRACT/CONTRACT/
COPY COMMAND/COMMAND.INFRASTRUCTURE/*.csproj COMMAND/COMMAND.INFRASTRUCTURE/
COPY COMMAND/COMMAND.PERSISTENCE/*.csproj COMMAND/COMMAND.PERSISTENCE/
COPY COMMAND/COMMAND.CONTRACT/*.csproj COMMAND/COMMAND.CONTRACT/

RUN dotnet nuget locals all --clear
RUN dotnet restore AUTHORIZATION/AUTHORIZATION.API/AUTHORIZATION.API.csproj --verbosity normal --force

COPY . ./

WORKDIR /src/AUTHORIZATION/AUTHORIZATION.API
RUN dotnet publish -c Release -o /app/out

# Runtime stage with globalization support
FROM mcr.microsoft.com/dotnet/aspnet:8.0-alpine

# ✅ Add ICU globalization support
RUN apk add --no-cache icu-libs

# ✅ Enable ICU-based globalization support
ENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false

WORKDIR /app
COPY --from=build-env /app/out .

ENTRYPOINT ["dotnet", "AUTHORIZATION.API.dll"]
