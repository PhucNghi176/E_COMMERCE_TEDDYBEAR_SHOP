version: '3.8'

services:
  command-api:
    build:
      context: .
      dockerfile: Dockerfile-command
      args:
        BUILD_CONFIGURATION: Release
    container_name: command-api
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
      - COMPlus_GCHeapHardLimit=0x10000000
      - DOTNET_GCHeapCount=2
    ports:
      - "1706:8080"
    networks:
      - app-network
    volumes:
      - ./COMMAND/COMMAND.API/appsettings.json:/app/appsettings.json:ro
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/health >/dev/null 2>&1 || exit 1"]
      interval: 45s
      timeout: 15s
      retries: 2
      start_period: 75s
    deploy:
      resources:
        limits:
          memory: 380M
          cpus: '0.35'

  query-api:
    build:
      context: .
      dockerfile: Dockerfile-query
      args:
        BUILD_CONFIGURATION: Release
    container_name: query-api
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
      - COMPlus_GCHeapHardLimit=0x10000000
      - DOTNET_GCHeapCount=2
    ports:
      - "1906:8080"
    networks:
      - app-network
    volumes:
      - ./QUERY/QUERY.API/appsettings.json:/app/appsettings.json:ro
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/health >/dev/null 2>&1 || exit 1"]
      interval: 45s
      timeout: 15s
      retries: 2
      start_period: 75s
    depends_on:
      command-api:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 380M
          cpus: '0.35'

  authorize-api:
    build:
      context: .
      dockerfile: Dockerfile-authorize
      args:
        BUILD_CONFIGURATION: Release
    container_name: authorize-api
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
      - COMPlus_GCHeapHardLimit=0x0C000000
      - DOTNET_GCHeapCount=1
    ports:
      - "1917:8080"
    networks:
      - app-network
    volumes:
      - ./AUTHORIZATION/AUTHORIZATION.API/appsettings.json:/app/appsettings.json:ro
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/health >/dev/null 2>&1 || exit 1"]
      interval: 45s
      timeout: 15s
      retries: 2
      start_period: 75s
    deploy:
      resources:
        limits:
          memory: 320M
          cpus: '0.3'

networks:
  app-network:
    driver: bridge