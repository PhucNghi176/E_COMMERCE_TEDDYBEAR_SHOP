services:
  command-api:
    build:
      context: .
      dockerfile: Dockerfile-command
      args:
        BUILD_CONFIGURATION: Release
    container_name: command-api
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
    ports:
      - "1706:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app-network
    volumes:
      - ./COMMAND/COMMAND.API/appsettings.json:/app/appsettings.json:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  query-api:
    build:
      context: .
      dockerfile: Dockerfile-query
      args:
        BUILD_CONFIGURATION: Release
    container_name: query-api
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
    ports:
      - "1906:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app-network
    volumes:
      - ./QUERY/QUERY.API/appsettings.json:/app/appsettings.json:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      command-api:
        condition: service_healthy
  
  authorize-api:
    build:
      context: .
      dockerfile: Dockerfile-authorize
      args:
        BUILD_CONFIGURATION: Release
    container_name: authorize-api
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
    ports:
      - "1917:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app-network
    volumes:
      - ./AUTHORIZATION/AUTHORIZATION.API/appsettings.json:/app/appsettings.json:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  app-network:
    driver: bridge
